---
import { getCollection } from "astro:content";
import ProjectInList from "../Projects/ProjectInList.astro";
const res = await getCollection("progetti", ({ data }: { data: any }) => {
  return data.hidden == false;
});

const progetti = res
  .reverse()
  .sort((a: any, b: any) => b.data.date - a.data.date);

// Group projects by year using Map
const groupedProjects = new Map<string, typeof progetti>();

progetti.forEach((progetto: any) => {
  const year = progetto.data.year_label;

  if (!groupedProjects.has(year)) {
    groupedProjects.set(year, []);
  }
  groupedProjects.get(year)?.push(progetto);
});

export interface ProjectInterface {
  name: string;
  slug: string;
  repoName: string;
  description: string;
  image: any;
  logo?: any;
  status: string;
  linkToProject: string;
  hidden: boolean;
}
---

<section id="projects" class="py-12">
  <h2 class="container font-secondary mb-20 text-5xl text-center">Projects</h2>

  <div class="mx-auto max-w-5xl px-2 flex flex-col gap-4 lg:gap-8">
    {
      Array.from(groupedProjects.entries()).map(([year, projects]) => (
        <div class="flex flex-col gap-4 lg:gap-8">
          <h3 class=" sticky top-20 font-secondary text-3xl font-bold self-start z-10">
            {year}
          </h3>

          {projects.map(
            (progetto: any) =>
              progetto.data.hidden == false && (
                <div class="sticky-project top-36 bg-[#f4f3ed] rounded-xl shadow-xl">
                  <ProjectInList project={progetto} />
                </div>
              )
          )}
        </div>
      ))
    }
  </div>
</section>

<style is:global>
  .sticky-project {
    @apply sticky top-36;

    transition:
      transform 0.5s ease,
      opacity 0.5s ease;
  }

  .scaled {
    transform: scale(0.95); /* Adjust scale as needed */
    opacity: 0.25;
  }
</style>

<script>
  document.addEventListener("scroll", () => {
    const projects = document.querySelectorAll(".sticky-project");

    projects.forEach((project, index) => {
      const projectTop = project.getBoundingClientRect().top;

      if (projectTop < project.clientHeight) {
        if (index > 0) {
          projects[index - 1].classList.add("scaled");

          if (projectTop < 200) {
            projects[index - 1].classList.add("!opacity-0");
          } else {
            projects[index - 1].classList.remove("!opacity-0");
          }
        }
      } else {
        if (index > 0) {
          projects[index - 1].classList.remove("scaled");
        }
      }
    });
  });
</script>
