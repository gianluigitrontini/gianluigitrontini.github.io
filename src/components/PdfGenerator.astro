---
import { getCollection } from "astro:content";
const res = await getCollection("professionalExperience");

const professionalExperiences = res
  .reverse()
  .sort((a: any, b: any) => b.data.date - a.data.date);

const { isPage = false } = Astro.props;
---

<data-holder data-experiences={JSON.stringify(professionalExperiences)}
  >{!isPage && <button id="download-pdf">Download CV</button>}
</data-holder>

<script>
  // @ts-ignore
  import pdfMake from "pdfmake/build/pdfmake";
  import { pdfFonts } from "../assets/fonts-pdf/vfs_fonts";
  pdfMake.vfs = pdfFonts;
  pdfMake.fonts = {
    SequelSans: {
      normal: "Sequel-Sans-Light.ttf",
      bold: "Sequel-Sans-Medium.ttf",
    },
  };

  import { base64ProfileImage } from "../assets/logo-base64";
  import { qrCodeBase64 } from "../assets/qr-code-base64";
  import { linkedinBase64, githubBase64 } from "../assets/cv-icons-base64";

  class PdfGenerator extends HTMLElement {
    connectedCallback() {
      const downloadPdfButton = this.querySelector("#download-pdf");

      downloadPdfButton?.addEventListener("click", () => {
        this.generatePDF({ download: true });
      });

      this.generatePDF({ download: false });
    }

    generatePDF({ download }: { download: boolean }) {
      const professionalExperience = JSON.parse(
        this.dataset.experiences || ""
      ).map((experience: any, i: number) => {
        // Generate the structure for PDF
        return [
          {
            text: `${experience.data.dates}`,
            margin: [0, 10, 0, 0],
          },
          {
            text: experience.data.company,
            bold: true,
            margin: [0, 0, 0, 0],
          },
          {
            text: `${experience.data.role}`,
            margin: [0, 5, 0, 0],
          },
          {
            ul: experience.data.bulletPoints.map((bulletPoint: string) => {
              return { text: `${bulletPoint}`, margin: [0, 5, 0, 0] };
            }),
            margin: [0, 5, 0, 0],
          },
          {
            text: `Tech Stack: ${experience.data.technologies.join(", ")}`,
            margin: [0, 5, 0, 0],
          },
        ];
      });

      var dd = {
        info: {
          title: "CV_Gianluigi_TRONTINI",
          author: "Gianluigi Trontini",
        },
        pageMargins: [20, 20, 20, 10],
        content: [
          {
            columns: [
              {
                image: base64ProfileImage,
                width: 75,
              },
              {
                stack: [
                  {
                    text: "Gianluigi Trontini",
                    style: "header",
                  },
                  {
                    text: "Software Developer",
                    margin: [0, 1, 0, 0],
                  },
                  {
                    text: "21/10/1996 | San Benedetto del Tronto, Italy",
                    margin: [0, 1, 0, 0],
                  },
                  {
                    text: "gianluigitrontini@gmail.com | +39 3806816204",
                    margin: [0, 1, 0, 0],
                  },
                ],
                margin: [15, 10, 0, 0],
              },
              {
                image: qrCodeBase64,
                width: 75,
                margin: [0, 0, 0, 0],
              },
              {
                text: "",
                width: "25",
              },
            ],
          },
          {
            columns: [
              {
                columns: [
                  {
                    image: linkedinBase64,
                    width: 14,
                  },
                  { text: "Gianluigi Trontini", margin: [5, 0, 0, 0] },
                ],
              },
              {
                columns: [
                  {
                    image: githubBase64,
                    width: 14,
                  },
                  {
                    text: "github.com/gianluigitrontini",
                    margin: [5, 0, 0, 0],
                  },
                ],
              },
              {
                text: "gianluigitrontini.github.io",
                style: {
                  alignment: "right",
                },
              },
            ],
            margin: [0, 10, 0, 0],
          },
          {
            text: "Professional Experience",
            style: "header",
            margin: [0, 10, 0, 0],
          },
          ...professionalExperience,
          {
            text: "Education",
            style: "header",
            margin: [0, 10, 0, 0],
          },
          {
            text: "2015 | Graduated from Liceo Artistico O. Licini - 93/100",
            margin: [0, 5, 0, 0],
          },
          {
            text: "2017 | Started studying Industrial Design at Unicam (Ascoli Piceno). Led by a lifelong passion for technology, during the course I started self-learning programming and web development, which led me to pause my formal studies and pursue a career in tech.",
            margin: [0, 5, 0, 70],
          },
          {
            stack: [
              "I agree to this CV being kept on file and distributed for employment purposes.",
              {
                text: "This CV has been generated automatically using Javascript based on the content on my online portfolio. Check it out!",
              },
              "",
            ],
            style: {
              alignment: "center",
              fontSize: 8,
            },
          },
        ],
        defaultStyle: {
          fontSize: 10,
          font: "SequelSans",
        },
        styles: {
          header: {
            fontSize: 12,
            bold: true,
            alignment: "justify",
          },
        },
      };

      const pdfDoc = pdfMake.createPdf(dd);

      {
        download == true && pdfDoc.download("CV_Gianluigi_TRONTINI.pdf");
      }
      {
        download == false &&
          pdfDoc.getDataUrl((dataUrl: string) => {
            const targetElement = document.querySelector("#pdfContainer");
            if (!targetElement?.firstChild) {
              const iframe = document.createElement("iframe");
              iframe.src = dataUrl;
              targetElement?.appendChild(iframe);
            }
          });
      }
    }
  }

  customElements.define("data-holder", PdfGenerator);
</script>
